/* #18 TypeScript Configuration */
/* #18a tsconfig.json is the central configuration file for TypeScript projects */
/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */
/* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */
{
  "compileOnSave": false,
  "compilerOptions": {
    /* #18b Output Configuration */
    "outDir": "./dist/out-tsc", // Where TypeScript emits compiled JS files
    /* #18c Type Checking Options */
    "strict": true, // Enables all strict type checking options
    "noImplicitOverride": true, // Ensure overrides are explicit
    "noPropertyAccessFromIndexSignature": true, // Prevents property access using string index
    "noImplicitReturns": true, // Ensures all code paths in a function return a value
    "noFallthroughCasesInSwitch": true, // Report errors for fallthrough cases in switch statements
    /* #18d Module & Compilation Settings */
    "skipLibCheck": true, // Skip type checking of declaration files
    "isolatedModules": true, // Ensure each file can be transpiled independently
    "esModuleInterop": true, // Emit additional JS to ease importing CommonJS modules
    "experimentalDecorators": true, // Enable experimental support for decorators (required for Angular)
    "moduleResolution": "bundler", // How module dependencies are resolved
    "importHelpers": true, // Import helper functions from tslib
    /* #18e ECMAScript Target Settings */
    "target": "ES2022", // ECMAScript target version
    "module": "ES2022" // Module code generation method
  },
  /* #18f Angular-Specific Options */
  "angularCompilerOptions": {
    "enableI18nLegacyMessageIdFormat": false, // Disable legacy i18n message format
    "strictInjectionParameters": true, // Verify types of parameters in DI
    "strictInputAccessModifiers": true, // Ensures private inputs remain private
    "strictTemplates": true // Enable strict template type checking
  }
}